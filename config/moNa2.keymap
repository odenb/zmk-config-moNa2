#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE   &kp W           &kp E      &kp R        &kp T                                        &kp Y            &kp U  &kp I      &kp O    &mt BACKSPACE P
&kp A        &kp S           &kp D      &kp F        &kp G                           &trans       &kp H            &kp J  &kp K      &kp L    &kp ENTER
&kp Z        &kp X           &kp C      &kp V        &kp B        &mt LCTRL LCTRL    &lt 4 A      &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&mt LCTRL Q  &kp LEFT_SHIFT  &kp LCTRL  &lt 3 SPACE  &lt 1 SPACE  &lt 2 SPACE        &lt 1 ENTER  &lt 2 BACKSPACE                             &lt 4 LEFT_WIN
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4     &kp N5                                        &kp N6     &kp N7     &kp N8     &kp N9  &kp N0
&trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp UP_ARROW                 &kp EXCLAMATION  &kp MINUS  &mkp LCLK  &mkp RCLK  &trans  &kp QUESTION
&trans        &trans          &kp LS(LC(Z))   &kp LC(Z)        &kp LC(V)     &kp LC(C)      &trans           &trans     &trans     &trans     &trans  &trans
&trans        &trans          &trans          &kp LC(X)        &trans        &bootloader    &bootloader      &trans                                   &kp B
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp EXCLAMATION             &kp F1   &kp F2   &kp F3   &kp PLUS                                  &kp CARET         &kp AMPERSAND      &kp TILDE       &kp MINUS        &kp BACKSLASH
&kp SLASH                   &kp F4   &kp F5   &kp F6   &kp ASTERISK               &kp TAB        &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR       &kp QUESTION
&mt LEFT_SHIFT KP_NUMBER_0  &kp F7   &kp F8   &kp F9   &kp PERIOD    &kp EQUAL    &kp RIGHT_ALT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH
&trans                      &kp F10  &kp F11  &kp F12  &trans        &trans       &bootloader    &trans                                                                &kp PIPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                          &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                 &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans         &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &kp C_RESET    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp BACKSPACE                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS                 &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL      &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &kp NUMBER_0  &trans        &trans        &trans         &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
